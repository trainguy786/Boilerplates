---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-config
  namespace: pihole
data:
  # Environment variables for Pi-hole
  TZ: "UTC"
  WEBPASSWORD: "<password" # Replace with a strong password
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: pihole
  annotations:
    # Expose as a LoadBalancer service for DNS
spec:
  type: LoadBalancer
  ports:
    - name: dns-tcp
      port: 53
      targetPort: 53
      protocol: TCP
    - name: dns-udp
      port: 53
      targetPort: 53
      protocol: UDP
  selector:
    app: pihole
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          envFrom:
            - configMapRef:
                name: pihole-config
          ports:
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
            - name: etc-pihole
              mountPath: /etc/pihole
            - name: dnsmasq
              mountPath: /etc/dnsmasq.d
          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "300m"
      volumes:
        - name: etc-pihole
          persistentVolumeClaim:
            claimName: pihole-etc-pihole
        - name: dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-etc-pihole
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-dashboard
  namespace: pihole
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.middlewares: "pihole-auth"
spec:
  rules:
    - host: "pihole.kube.soulneko.xyz" # Replace with your domain
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: pihole-dns
                port:
                  number: 80
  tls:
    - hosts:
        - "pihole.kube.domain.local" # Replace with your domain
      secretName: kube-domain-local-tls # Certificate managed by Traefik

